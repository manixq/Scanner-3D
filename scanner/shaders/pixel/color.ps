Texture2D normal_texture : register(t0);
SamplerState sample : register(s0);

cbuffer light_buffer
{
    float3 light_direction;
    float padding;
};

//========
//Typedefs
struct PIXEL_INPUT_TYPE
{
    float4 position : SV_POSITION;
    float4 color : COLOR;
    float2 tex : TEXCOORD0;
};

//===========
//Pixelshader
float4 Color_pixel_shader(PIXEL_INPUT_TYPE input) : SV_TARGET
{        
    float4 normals;
    float3 light_dir;
    float light_intensity;
    float4 color;
    
    normals = normal_texture.Sample(sample, input.tex);    
    light_dir = -light_direction;
    color.w = 1.0f;

    normals = normalize((normals * 2.0f) - 1.0f);
    light_intensity = saturate(dot(normals.xyz, light_dir));
    
    if ((input.color.x + input.color.y + input.color.z) <= 0.00001f)
        color.w = 0.0f;

    color.xyz = input.color.xyz * float3(0.1f, 0.1f, 0.1f);
    if (light_intensity > 0.0f)
        color.xyz = saturate(input.color.xyz * light_intensity);

    return color;
}